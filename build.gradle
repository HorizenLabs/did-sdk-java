plugins {
    id 'java-library'
    id 'ru.vyarus.quality' version '4.1.0'
    id 'jacoco'
    id 'com.github.dawnwords.jacoco.badge' version '0.2.0'
    id 'com.adarshr.test-logger' version '2.0.0'
}

group = 'com.hedera.hashgraph'
version = '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/com.hedera.hashgraph/sdk-jdk7
    implementation group: 'com.hedera.hashgraph', name: 'sdk-jdk7', version: '2.0.5'
    // https://mvnrepository.com/artifact/com.google.gson/gson
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.guava:guava:30.1.1-android'
    implementation group: 'org.bitcoinj', name: 'bitcoinj-core', version: '0.15.6'
    implementation group: 'io.github.cdimascio', name: 'java-dotenv', version: '5.1.4'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'


    implementation 'io.grpc:grpc-okhttp:1.35.0'

    testImplementation group: 'org.awaitility', name: 'awaitility', version: '4.0.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.6.2'

    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.2'
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

test {
    useJUnitPlatform()
    systemProperty "file.encoding", "utf-8"
    finalizedBy jacocoTestReport
    finalizedBy generateJacocoBadge
}

testlogger {
    theme 'standard'
    showExceptions true
    showStackTraces true
    showFullStackTraces true
    showCauses true
    slowThreshold 2000
    showSummary true
    showSimpleNames false
    showPassed true
    showSkipped true
    showFailed true
    showStandardStreams true
    showPassedStandardStreams true
    showSkippedStandardStreams true
    showFailedStandardStreams true
}

quality {
	checkstyleVersion = '8.29'
	spotbugsVersion = '4.0.1'
	checkstyle = true
    spotbugs = true
    pmd = true
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"
    reports {
        xml.enabled true
    	html.enabled true
    	csv.enabled false
    }
}

jacocoBadgeGenSetting {
    jacocoReportPath  "$buildDir/reports/jacoco/test/jacocoTestReport.xml"
    readmePath "$projectDir/README.md"
    limit = ['instruction': 0, 'branch': 0, 'line': 0, 'method': 0, 'class': 0]
}

javadoc {
    source = sourceSets.main.allJava
    classpath = sourceSets.main.compileClasspath
    options.encoding = 'UTF-8'
    destinationDir = file("${projectDir}/docs/sdk-javadocs")
}

